{"version":3,"sources":["logo.svg","components/login.js","components/Header.js","components/AddProduct.js","components/EditProduct.js","components/ProductList.js","components/DeleteConfirm.js","components/DashBoardTable.js","App.js","serviceWorker.js","index.js","static/images/background/background.jpg"],"names":["module","exports","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","background","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","marginTop","avatar","primary","main","form","width","submit","SignInSide","classes","useState","authorized","setAuthorized","email","setEmail","Password","setPassword","error","setEror","login","a","data","result","fetch","method","headers","body","JSON","stringify","then","response","json","to","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","style","fontSize","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","value","target","Button","onClick","e","preventDefault","status","console","log","Box","mt","flex","position","flexGrow","menuButton","marginRight","title","account","marginLeft","Header","React","anchorEl","Boolean","AppBar","Toolbar","marginBottom","AddProduct","props","Product","setProduct","Dialog","open","onClose","handleClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","event","DialogActions","handleConfirm","EditProduct","toEditName","useEffect","openEdit","handleEditClose","handleEditConfirm","border","borderColor","outline","maxHeight","StyledTableRow","withStyles","default","borderLeft","textAlign","TableRow","StyledTableCell","head","common","white","paddingRight","TableCell","ProductList","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","Table","stickyHeader","aria-label","TableHead","columns","map","column","key","minWidth","TableBody","Object","keys","rows","slice","row","hover","role","tabIndex","ProductName","startIcon","setEdit","setEditName","setOpenEdit","setDelete","setOpenDelete","TablePagination","rowsPerPageOptions","count","length","onChangePage","newPage","onChangeRowsPerPage","DeleteConfirm","toDelete","openDelete","handleDeleteClose","deleteProduct","DashBoardTable","setOpen","toEdit","setEdited","setRows","fetchData","window","location","reload","alert","left","fontWeight","App","path","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e6ede592.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport background from \"../static/images/background/background.jpg\";\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Redirect } from \"react-router-dom\";\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\nconst errorMessage = () => {\r\n\r\n    return <Typography style={{ color: \"red\" }}> Wrong Email or Password </Typography>\r\n\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: `url(${background})`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginTop: \"25%\"\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n        // backgroundColor: \"gray\",\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignInSide() {\r\n    // \r\n    const classes = useStyles();\r\n    const [authorized, setAuthorized] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [error, setEror] = useState(\"\");\r\n\r\n    const login = async function () {\r\n        const data = { email: email, Password: Password }\r\n\r\n        let result = \"\";\r\n        await fetch(\"/login\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n\r\n            body: JSON.stringify(data)\r\n        }).then((response) => response.json()).then((data) => {\r\n            result = data\r\n\r\n\r\n        })\r\n\r\n\r\n        return result\r\n\r\n    };\r\n\r\n    if (authorized) {\r\n        return <Redirect to='/Dashboard' />\r\n    }\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n\r\n\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n          </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <Typography style={{ color: \"red\", fontSize: 13 }}> {error}</Typography>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            onChange={(value) => {\r\n                                setEmail(value.target.value);\r\n\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            onChange={(value) => {\r\n                                setPassword(value.target.value);\r\n\r\n                            }}\r\n                        />\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                let result = login();\r\n                                result.then((data) => {\r\n\r\n                                    if (data.status == 1) {\r\n                                        setAuthorized(true);\r\n\r\n                                    }\r\n                                    else {\r\n                                        setEror(\"Wrong Email or Password\");\r\n                                        console.log(data);\r\n                                    }\r\n                                })\r\n\r\n\r\n\r\n                            }}\r\n                        >\r\n                            Sign In\r\n                            {/* <NavLink style={{ textDecoration: \"none\", color: \"white\" }} to=\"/dashboard\"> Sign In </NavLink> */}\r\n                        </Button>\r\n\r\n                        <Box mt={5}>\r\n                            <Copyright />\r\n                        </Box>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n        </Grid >\r\n    );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n\r\n    height: \"100%\",\r\n    position: 0\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    // backgroundColor: theme.palette.secondary.main,\r\n    backgroundColor: \"#3F51B5\",\r\n  },\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  account: { marginLeft: \"65%\" }\r\n}));\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <div className={classes.container}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"white\" }}>\r\n        <Toolbar>\r\n          <div style={{ display: \"inline-flex\", width: \"30%\" }}>\r\n            <Avatar className={classes.avatar}>\r\n              <DashboardIcon />\r\n            </Avatar>\r\n            <Typography style={{ fontSize: 17.5, color: \"#3F51B5\", width: \"80\", marginTop: \"auto\", marginBottom: \"auto\" }}>\r\n              Admin Dashboard\r\n          </Typography>\r\n          </div>\r\n          <div className={classes.account}>\r\n\r\n            <Link to=\"/\"> <Typography style={{ color: \"#3F51B5\" }}>Logout</Typography></Link>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nfunction AddProduct(props) {\r\n    const name = \"\"\r\n    const [Product, setProduct] = useState(null)\r\n\r\n    const handleInputChange = event => {\r\n\r\n        setProduct(event.target.value);\r\n\r\n\r\n\r\n    }\r\n    const confirm = () => {\r\n        console.log(Product)\r\n        props.handleConfirm(Product);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add Product</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Enter Product Name:\r\n                     </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"product_name\"\r\n                        label=\"Product Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.handleClose} color=\"primary\">\r\n                        Cancel\r\n        </Button>\r\n                    <Button onClick={confirm} color=\"primary\">\r\n                        Confirm\r\n        </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default AddProduct;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nfunction EditProduct(props) {\r\n    let name = props.toEditName;\r\n    console.log(\"toEditName = \" + name);\r\n    const [Product, setProduct] = useState(name)\r\n    useEffect(() => { setProduct(name); console.log(\"PRODUCT + \" + Product) }, [])\r\n    const handleInputChange = event => {\r\n        setProduct(event.target.value);\r\n    }\r\n    const confirm = () => {\r\n        props.handleEditConfirm(Product);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.openEdit} onClose={props.handleEditClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Edit Product</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Enter Product Name:\r\n        </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"product_name\"\r\n                        label=\"Product Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        value={Product}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.handleEditClose} color=\"primary\">\r\n                        Cancel\r\n        </Button>\r\n                    <Button onClick={confirm} color=\"primary\">\r\n                        Confirm Change\r\n        </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default EditProduct;\r\n","\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport React, { useState, useEffect } from \"react\";\r\nconst useStyles = makeStyles(theme => ({\r\n    '@global': {\r\n        '*::-webkit-scrollbar': {\r\n            width: '1em',\r\n            border: '1em',\r\n            borderColor: \"white\"\r\n        },\r\n        '*::-webkit-scrollbar-track': {\r\n            '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)'\r\n        },\r\n        '*::-webkit-scrollbar-thumb': {\r\n            backgroundColor: 'rgb(55,100,160)',\r\n            outline: '1px solid red'\r\n        }\r\n    },\r\n    root: {\r\n        width: \"100%\",\r\n    },\r\n    container: {\r\n        maxHeight: 750,\r\n        marginTop: 50,\r\n        marginLeft: 50,\r\n        marginRight: 400,\r\n        width: \"95%\",\r\n    }\r\n}));\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.background.default,\r\n            borderLeft: \"1rem\"\r\n        },\r\n\r\n        '&:nth-child(2)': {\r\n            textAlign: \"center\"\r\n\r\n        },\r\n\r\n        '&:nth-child(1)': {\r\n            textAlign: \"center\"\r\n\r\n        },\r\n\r\n        '&:nth-child(3)': {\r\n            textAlign: \"center\"\r\n\r\n        }\r\n    },\r\n}))(TableRow);\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#3F51B5\",\r\n        color: theme.palette.common.white,\r\n        '&:nth-child(2)': {\r\n            textAlign: \"center\"\r\n        }\r\n        ,\r\n        '&:nth-child(1)': {\r\n            textAlign: \"center\"\r\n        }\r\n        ,\r\n        '&:nth-child(3)': {\r\n            textAlign: \"right\",\r\n            paddingRight: \"6.2%\"\r\n        }\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n        '&:nth-child(2)': {\r\n            textAlign: \"center\"\r\n\r\n        },\r\n        '&:nth-child(1)': {\r\n            textAlign: \"center\"\r\n\r\n        },\r\n        '&:nth-child(3)': {\r\n            textAlign: \"right\"\r\n        }\r\n    },\r\n    root: {},\r\n}))(TableCell);\r\n\r\nexport default function ProductList(props) {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    useEffect(() => { console.log(\"Rendering Product List\") }, [])\r\n\r\n    return (\r\n        <div>\r\n            <TableContainer component={Paper} className={classes.container}>\r\n                <Table className={classes.root} stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <StyledTableRow>\r\n                            {props.columns.map(column => (\r\n                                <StyledTableCell\r\n                                    key={column.id}\r\n                                    align={column.align}\r\n                                    style={{\r\n                                        minWidth: column.minWidth\r\n                                    }}\r\n                                >\r\n                                    {column.label}\r\n                                </StyledTableCell>\r\n\r\n                            )\r\n                            )\r\n                            }\r\n                            <StyledTableCell\r\n                                key=\"option\"\r\n                                align=\"right\"\r\n                                style={{\r\n                                    minWidth: 170\r\n                                }}\r\n                            >\r\n                                Option\r\n                                </StyledTableCell>\r\n                        </StyledTableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n\r\n\r\n                        {console.log(Object.keys(props.rows))}\r\n                        {props.rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).\r\n                            map(row => {\r\n\r\n                                return (\r\n                                    <StyledTableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n\r\n                                        <StyledTableCell align=\"left\">\r\n                                            {row.id}\r\n                                        </StyledTableCell>\r\n                                        <StyledTableCell align=\"left\" >\r\n                                            {row.ProductName}\r\n                                        </StyledTableCell>\r\n\r\n                                        <StyledTableCell align=\"left\" >\r\n                                            <Button\r\n                                                variant=\"outlined\"\r\n                                                color=\"primary\"\r\n                                                style={{ marginRight: \"0.5rem\" }}\r\n                                                startIcon={<EditIcon />}\r\n                                                onClick={() => {\r\n                                                    props.setEdit(row.id);\r\n                                                    props.setEditName(row.ProductName);\r\n                                                    console.log(row.ProductName);\r\n                                                    // alert(row.id + \" \" + row.name);\r\n                                                    props.setOpenEdit(true);\r\n                                                }}>\r\n                                                Edit\r\n                                        </Button>\r\n                                            <Button\r\n                                                variant=\"outlined\"\r\n                                                color=\"secondary\"\r\n                                                startIcon={<DeleteIcon />}\r\n                                                onClick={\r\n                                                    () => {\r\n                                                        // props.deleteProduct(row.id);\r\n                                                        props.setDelete(row.id);\r\n                                                        props.setOpenDelete(true);\r\n\r\n                                                    }\r\n                                                }\r\n                                            >Delete\r\n                                        </Button>\r\n\r\n\r\n                                        </StyledTableCell>\r\n                                    </StyledTableRow>\r\n                                );\r\n                            })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 60, 100]}\r\n                component=\"div\"\r\n                count={props.rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                style={{ marginRight: \"1.8rem\", color: \"#3F51B5\" }}\r\n            />\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nfunction DeleteConfirm(props) {\r\n    let id = props.toDelete;\r\n\r\n    const confirm = () => {\r\n        props.deleteProduct(id);\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog open={props.openDelete} onClose={props.handleDeleteClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Confirm\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure you want to Delete this Product?\r\n                     </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={props.handleDeleteClose} color=\"primary\">\r\n                        NO\r\n                 </Button>\r\n                    <Button onClick={confirm} color=\"primary\" autoFocus>\r\n                        Yes\r\n                 </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default DeleteConfirm;","import {\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Header from \"./Header\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddProduct from \"./AddProduct\";\r\nimport EditProduct from \"./EditProduct\";\r\nimport ProductList from \"./ProductList\";\r\nimport DeleteConfirm from \"./DeleteConfirm\";\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}));\r\nconst columns = [\r\n  { id: \"id\", label: \"Product ID\", minWidth: 170 },\r\n  { id: \"ProductName\", label: \"Product Name\", minWidth: 100 },\r\n];\r\nexport default function DashBoardTable() {\r\n  const [open, setOpen] = useState(false);\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  let toAdd = \"\";\r\n  const [toEdit, setEdited] = useState(null);\r\n  const setEdit = (value) => {\r\n    console.log(\"Setting \" + value);\r\n    setEdited(value);\r\n\r\n\r\n  }\r\n  const [toDelete, setDelete] = useState(null);\r\n  const [toEditName, setEditName] = useState(null);\r\n  const initial = [];\r\n  const [rows, setRows] = useState(initial);\r\n  const [, forceUpdate] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n\r\n      const response = await fetch(\"/product\", {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n      }).then((response) => response.json()).then((data) => {\r\n        return data.result\r\n\r\n\r\n      });\r\n\r\n      return response\r\n    }\r\n    let a = fetchData()\r\n    a.then((data) => {\r\n      setRows(data)\r\n\r\n    })\r\n\r\n    console.log(\"QWEW \" + rows)\r\n\r\n  }, []);\r\n\r\n  // function createData(id, ProductName) {\r\n  //   return { id, ProductName };\r\n  // }\r\n\r\n  const handleDeleteClose = () => {\r\n    setOpenDelete(false);\r\n    console.log(openDelete)\r\n  };\r\n  const deleteProduct = async (e) => {\r\n    let id = e;\r\n    // setRows(rows.filter((e) => (e.id !== id)))\r\n\r\n    let result = \"\";\r\n    await fetch(\"/product/\" + e, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    }).then((response) => response.json()).then((data) => {\r\n      result = data\r\n    })\r\n    console.log(result)\r\n\r\n    setOpenDelete(false);\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleConfirm = async (value) => {\r\n    if (value.name != \"\") {\r\n      const data = { ProductName: value }\r\n      let result = \"\";\r\n      await fetch(\"/product\", {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data)\r\n      }).then((response) => response.json()).then((data) => {\r\n        result = data\r\n      })\r\n      console.log(result)\r\n      handleClose();\r\n      window.location.reload();\r\n    } else {\r\n      alert(\"Please Enter Some Value\")\r\n\r\n    }\r\n  };\r\n  const handleEditClose = () => {\r\n    setOpenEdit(false);\r\n\r\n  };\r\n  const handleEditConfirm = async (Product) => {\r\n    if (toEdit != \"\") {\r\n      // const newRows = rows.map((obj) => {\r\n      //   if (obj.id == toEdit) {\r\n\r\n      //     obj.name = Product;\r\n      //   }\r\n      //   return obj\r\n      // });\r\n      // setRows(newRows)\r\n\r\n      const data = { ProductName: Product }\r\n      let result = \"\";\r\n      await fetch(\"/product/\" + toEdit, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data)\r\n      }).then((response) => response.json()).then((data) => {\r\n        result = data\r\n      })\r\n      console.log(result)\r\n      setOpenEdit(false);\r\n      window.location.reload();\r\n    }\r\n    else {\r\n      alert(\"Please Enter Some Value\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {open === true &&\r\n        <AddProduct\r\n          open={open}\r\n          rows={rows}\r\n          handleClose={handleClose}\r\n          handleConfirm={handleConfirm}\r\n        // createData={createData}\r\n\r\n        />}\r\n      {openEdit === true &&\r\n        <EditProduct\r\n          openEdit={openEdit}\r\n          rows={rows}\r\n          handleEditClose={handleEditClose}\r\n          handleEditConfirm={handleEditConfirm}\r\n          toEditName={toEditName}\r\n\r\n\r\n        />\r\n      }\r\n      {openDelete === true &&\r\n        <DeleteConfirm\r\n          openDelete={openDelete}\r\n          rows={rows}\r\n          handleDeleteClose={handleDeleteClose}\r\n          deleteProduct={deleteProduct}\r\n          toDelete={toDelete}\r\n        />}\r\n      <Header />\r\n      <Button\r\n        variant=\"contained\"\r\n        style={{ backgroundColor: \"#3F51B5\", color: \"white\", left: \"89.5%\", marginTop: 45, marginBottom: \"-2rem\" }}\r\n        startIcon={<AddIcon />}\r\n        onClick={() => {\r\n          setOpen(true);\r\n        }}\r\n      >\r\n        Add Product\r\n    </Button>\r\n      <Typography style={{ marginLeft: \"3rem\", fontWeight: \"bold\", color: \"#3F51B5\" }}>Product Management</Typography>\r\n      <ProductList\r\n        rows={rows}\r\n        columns={columns}\r\n        setEdit={setEdit}\r\n        setDelete={setDelete}\r\n        setEditName={setEditName}\r\n        setOpenEdit={setOpenEdit}\r\n        setOpenDelete={setOpenDelete}\r\n        deleteProduct={deleteProduct}\r\n        handleDeleteClose={handleDeleteClose}\r\n      />\r\n\r\n\r\n    </div >\r\n  );\r\n}\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport SignInSide from \"./components/login\";\nimport Header from \"./components/Header\";\nimport DashBoardTable from \"./components/DashBoardTable\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link, useHistory\n} from \"react-router-dom\";\nfunction App() {\n  return (<Router>\n    <div>\n      {/* A <Switch> looks through its children <Route>s and\n        renders the first one that matches the current URL. */}\n      <Switch>\n        <Route path=\"/Dashboard\">\n          <DashBoardTable />\n        </Route>\n        <Route path=\"/\">\n          <SignInSide />\n        </Route>\n      </Switch>\n    </div>\n  </Router>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background.13ff6281.jpg\";"],"sourceRoot":""}